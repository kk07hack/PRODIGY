import numpy as np
from PIL import Image

def shuffle_pixels(image_array):
    # Flatten the array
    flat_pixels = image_array.flatten()

    # Shuffle the flattened array
    np.random.shuffle(flat_pixels)

    # Reshape back to the original shape
    shuffled_pixels = flat_pixels.reshape(image_array.shape)

    return shuffled_pixels

def encrypt_image(input_path, output_path):
    img = Image.open(input_path)
    pixels = np.array(img)

    # Shuffle the pixels
    shuffled_pixels = shuffle_pixels(pixels)

    encrypted_img = Image.fromarray(shuffled_pixels)
    encrypted_img.save(output_path)
    print("Image encrypted successfully!")

def decrypt_image(input_path, output_path):
    img = Image.open(input_path)
    pixels = np.array(img)

    # Reverse the shuffling by sorting the indices
    indices = np.argsort(np.arange(pixels.size))
    decrypted_pixels = pixels.flatten()[indices].reshape(pixels.shape)

    decrypted_img = Image.fromarray(decrypted_pixels)
    decrypted_img.save(output_path)
    print("Image decrypted successfully!")

# Image paths
input_image = "input.jpg"
encrypted_image = "encrypted_image.jpg"
decrypted_image = "decrypted_image.jpg"

# Encrypt the image
encrypt_image(input_image, encrypted_image)

# Decrypt the image
decrypt_image(encrypted_image, decrypted_image)
